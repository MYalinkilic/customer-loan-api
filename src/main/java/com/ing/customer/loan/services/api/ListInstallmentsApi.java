/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ing.customer.loan.services.api;

import com.ing.customer.loan.services.models.Error;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "listInstallments", description = "the listInstallments API")
@RequestMapping("/ing/v1B/customer/loan/api")
public interface ListInstallmentsApi {

    /**
     * GET /listInstallments : To list customer assets
     *
     * @param customerId customer ID (required)
     * @param loanId loan ID (required)
     * @return Created (status code 200)
     *         or Bad request (status code 400)
     *         or Not Found (status code 404)
     *         or Internal Error (status code 500)
     */
    @Operation(
        operationId = "listInstallmentsGet",
        summary = "To list customer assets",
        tags = { "listInstallments" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Created"),
            @ApiResponse(responseCode = "400", description = "Bad request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/listInstallments",
        produces = { "application/json" }
    )
    
    ResponseEntity<Object> listInstallmentsGet(
        @NotNull @Parameter(name = "customerId", description = "customer ID", required = true, in = ParameterIn.HEADER) @RequestHeader(value = "customerId", required = true) String customerId,
        @NotNull @Parameter(name = "loanId", description = "loan ID", required = true, in = ParameterIn.HEADER) @RequestHeader(value = "loanId", required = true) String loanId
    );

}
